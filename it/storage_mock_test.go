// Code generated by moq; DO NOT EDIT
// github.com/matryer/moq

package it

import (
	"../storage"
	"sync"
)

var (
	lockDBMockGet sync.RWMutex
)

// DBMock is a mock implementation of DB.
//
//     func TestSomethingThatUsesDB(t *testing.T) {
//
//         // make and configure a mocked DB
//         mockedDB := &DBMock{
//             GetFunc: func() storage.Row {
// 	               panic("TODO: mock out the Get method")
//             },
//         }
//
//         // TODO: use mockedDB in code that requires DB
//         //       and then make assertions.
//
//     }
type DBMock struct {
	// GetFunc mocks the Get method.
	GetFunc func() storage.Row

	// calls tracks calls to the methods.
	calls struct {
		// Get holds details about calls to the Get method.
		Get []struct {
		}
	}
}

// Get calls GetFunc.
func (mock *DBMock) Get() storage.Row {
	if mock.GetFunc == nil {
		panic("moq: DBMock.GetFunc is nil but DB.Get was just called")
	}
	callInfo := struct {
	}{}
	lockDBMockGet.Lock()
	mock.calls.Get = append(mock.calls.Get, callInfo)
	lockDBMockGet.Unlock()
	return mock.GetFunc()
}

// GetCalls gets all the calls that were made to Get.
// Check the length with:
//     len(mockedDB.GetCalls())
func (mock *DBMock) GetCalls() []struct {
} {
	var calls []struct {
	}
	lockDBMockGet.RLock()
	calls = mock.calls.Get
	lockDBMockGet.RUnlock()
	return calls
}
